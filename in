[HttpGet("MemberNotesData")]
[Produces("application/json")]
public async Task<ActionResult> GetMemberNotesAsync(string env, string accessNumber)
{
    try
    {
        var logNotesData = await _noteRepository.GetMemberNotesAsync(env, accessNumber);

        if (logNotesData.IsSuccess)
        {
            return Ok(logNotesData.Value); // Return the real DTO if success
        }
        else
        {
            // If it failed (timeout or other error), return 400 BadRequest or 504 Gateway Timeout etc
            return BadRequest(new
            {
                Error = logNotesData.ErrorMessage
            });
        }
    }
    catch (Exception ex)
    {
        return StatusCode(500, new { Error = "Internal server error: " + ex.Message });
    }
}
